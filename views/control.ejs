<% 
var LEDControllers = 0;
%> <!DOCTYPE html>
<html>
	<head>
        <%- include("./includes/head.ejs", {Page: "Home"}) %>
        <link rel="stylesheet" href="assets/css/bulma-slider.min.css">
        <script src="/assets/FontAwesome.Pro.6.0.0.Beta1/web/js/all.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/@jaames/iro@5"></script>
        <script src="/socket.io/socket.io.js"></script>
        <script>
            const socket = io();
            socket.on("connect", () => {
                console.log(socket.id);
            });

            socket.on("hello", data => {
                console.log("Message: " + data);
            });
        </script>
	</head>
	<body>
        <%- include("includes/nav") %>
        <div class="container is-fluid">
            <div class="columns">
                <div class="column">
                    <div style="padding-right: initial;" class="button">
                        <span class="icon is-small">
                            <i class="fa-solid fa-power-off"></i>
                        </span>
                        <div class="buttons has-addons">
                            <button onclick="<%
                            LEDs.IRRGB.forEach(LED => {
                                %>LedAction('<%- LED %>', 'power on');<%
                            });
                            LEDs.RGB.forEach(LED => {
                                %>LedAction('<%- LED %>', 'RGB 255,255,255');<%
                            });
                            LEDs.Single.forEach(LED => {
                                %>LedAction('<%- LED %>', 'power on');<%
                            }); %>" class="button is-success">On</button>
                            <button onclick="socket.emit('Queue', 'reset');<%
                            LEDs.IRRGB.forEach(LED => {
                                %>LedAction('<%- LED %>', 'power off');<%
                            });
                            LEDs.RGB.forEach(LED => {
                                %>LedAction('<%- LED %>', 'RGB 0,0,0');<%
                            });
                            LEDs.Single.forEach(LED => {
                                %>LedAction('<%- LED %>', 'power off');<%
                            }); %>" class="button is-danger">Off</button>
                        </div>
                    </div>
                </div>
            </div>
            <div class="columns"><%
            var Controls = 0;
            LEDs.IRRGB.forEach(IR => {
                LEDControllers++
                Controls++
                if(Controls > 2) {
                    Controls = 0;
                %>
            </div>
            <div class="columns">
                <div class="column">
                    <% } else { %>
                <div class="column">
                    <% } %><%- include("LED/IR.ejs", {"Name": IR, ID: LEDControllers}); %>
                </div><%
            }); %><%
            LEDs.RGB.forEach(IR => {
                LEDControllers++
                Controls++
                if(Controls > 2) {
                    Controls = 0;
                %>
            </div>
            <div class="columns">
                <div class="column">
                    <% } else { %>
                <div class="column">
                    <% } %><%- include("LED/RGB.ejs", {"Name": IR, ID: LEDControllers}); %>
                </div><%
            });
            LEDs.Single.forEach(IR => {
                LEDControllers++
                Controls++
                if(Controls > 2) {
                    Controls = 0;
                %>
            </div>
            <div class="columns">
                <div class="column">
                    <% } else { %>
                <div class="column">
                    <% } %><%- include("LED/Single.ejs", {"Name": IR, ID: LEDControllers}); %>
                </div><%
            }); %>
            </div>
        </div>
        <footer class="footer" style="position: sticky;bottom:0px;">
            <div class="content has-text-centered">
                <p>
                    <strong>RGB: </strong><span id="RGBColor">???, ???, ???</span>
                    <strong>Queue: </strong><span id="QueueCount">0</span>
                </p>
            </div>
        </footer>
            <script>
            function SetRGB(LED, RGB) {
                socket.emit("action", JSON.stringify({
                    action: LED+' RGB '+RGB.r+','+RGB.g+','+RGB.b,
                    LED: "RGB",
                    shortcut: false
                }));
            }

            function LedAction(LED, action, shortcut = false) {
                if(shortcut) {
                    socket.emit("action", JSON.stringify({
                        LED: "IR",
                        shortcut: LED+action
                    }));
                } else {
                    socket.emit("action", JSON.stringify({
                        LED: "IR",
                        action: LED+" "+action
                    }));
                }
            }
            socket.on("response", data => {
                document.getElementById("RGBColor").innerHTML = data
            });
            socket.on("QueueCount", data => {
                document.getElementById("QueueCount").innerHTML = data
            });
            </script>
    <script src="assets/js/bulma-slider.min.js"></script>
    <script>
        bulmaSlider.attach();
    </script>
	</body>
</html>
